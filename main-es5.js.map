{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/data/TestData.ts","webpack:///src/app/data/dao/implementation/CategoryDAOArray.ts","webpack:///src/app/data/dao/implementation/PriorityDAOArray.ts","webpack:///src/app/data/dao/implementation/TaskDAOArray.ts","webpack:///src/app/dialog/OperType.ts","webpack:///src/app/dialog/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/dialog/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/dialog/edit-category-dialog/edit-category-dialog.component.ts","webpack:///src/app/dialog/edit-category-dialog/edit-category-dialog.component.html","webpack:///src/app/dialog/edit-priority-dialog/edit-priority-dialog.component.ts","webpack:///src/app/dialog/edit-priority-dialog/edit-priority-dialog.component.html","webpack:///src/app/dialog/edit-task-dialog/edit-task-dialog.component.ts","webpack:///src/app/dialog/edit-task-dialog/edit-task-dialog.component.html","webpack:///src/app/dialog/settings-dialog/settings-dialog.component.ts","webpack:///src/app/dialog/settings-dialog/settings-dialog.component.html","webpack:///src/app/model/Category.ts","webpack:///src/app/model/Priority.ts","webpack:///src/app/model/Task.ts","webpack:///src/app/pipe/task-date.pipe.ts","webpack:///src/app/service/data-handler.service.ts","webpack:///src/app/service/intro.service.ts","webpack:///src/app/views/categories/categories.component.ts","webpack:///src/app/views/categories/categories.component.html","webpack:///src/app/views/header/header.component.ts","webpack:///src/app/views/header/header.component.html","webpack:///src/app/views/priorities/priorities.component.ts","webpack:///src/app/views/priorities/priorities.component.html","webpack:///src/app/views/stats/stats-card/stats-card.component.ts","webpack:///src/app/views/stats/stats-card/stats-card.component.html","webpack:///src/app/views/stats/stats.component.ts","webpack:///src/app/views/stats/stats.component.html","webpack:///src/app/views/tasks/tasks.component.ts","webpack:///src/app/views/tasks/tasks.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dataHandler","introService","title","categoryMap","Map","selectedCategory","searchTaskText","searchCategoryText","priorityFilter","showStat","getAllCategories","subscribe","categories","getAllPriorities","priorities","onSelectCategory","startIntroJS","fillCategories","category","updateTasksAndStat","task","updateTask","deleteTask","pipe","t","getUncompletedTasksCountInCategory","count","result","set","deleteCategory","updateTasks","updateCategory","onSearchCategory","status","statusFilter","searchString","searchTasks","tasks","priority","addTask","addCategory","updateCategories","searchCategories","updateStat","getTotalCountInCategory","getCompletedTasksCountInCategory","getUncompletedTotalCount","array","totalTasksCountInCategory","completedTasksCountInCategory","uncompletedTasksCountInCategory","uncompletedTotalTasksCount","clear","sort","a","b","localeCompare","forEach","cat","onDeleteCategory","onUpdateCategory","onAddCategory","toggleStat","onUpdateTask","onDeleteTask","onAddTask","onFilterTasksByStatus","onSearchTasks","onFilterTasksByPriority","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","entryComponents","bootstrap","TestData","color","completed","date","Date","CategoryDAOArray","getLastIdCategory","push","Math","max","apply","map","c","categoriesTmp","find","splice","indexOf","undefined","filter","toUpperCase","includes","c1","c2","PriorityDAOArray","getLastIdTask","prioritiesTmp","priorityTmp","p","TaskDAOArray","todo","taskTmp","searchByElement","length","searchText","reverse","allTasks","OperType","ConfirmDialogComponent","dialogRef","data","dialogTitle","message","close","onConfirm","onCancel","EditCategoryDialogComponent","dialog","tmpTitle","operType","open","maxWidth","autoFocus","afterClosed","EDIT","EditPriorityDialogComponent","EditTaskDialogComponent","tmpCategory","tmpPriority","tmpDate","items","SettingsDialogComponent","deletePriority","addPriority","updatePriority","onDeletePriority","onAddPriority","onUpdatePriority","onClose","Category","Priority","Task","TaskDatePipe","format","currentDate","getDate","transform","name","DataHandlerService","taskDaoArray","categoryDaoArray","priorityDAOArray","getAll","search","update","add","getCompletedCountInCategory","getTotalUncompletedCount","getUncompletedCountInCategory","getTotalCount","providedIn","IntroService","introJS","setOptions","nextLabel","prevLabel","doneLabel","skipLabel","exitOnEsc","exitOnOverlayClick","start","$event","stopPropagation","CategoriesComponent","selectCategory","searchCategory","emit","index","indexMouseMove","width","ADD","searchCategoryTitle","CategoryMap","openAddCategoryDialog","showTasksByCategory","HeaderComponent","showSettings","showIntroHelp","PrioritiesComponent","newPriority","defaultColor","StatsCardComponent","StatsComponent","TasksComponent","displayedColumns","filterByTitle","filterByStatus","filterByPriority","selectedStatusFilter","selectedPriorityFilter","dataSource","addTableObjects","sortingDataAccessor","colName","paginator","value","fillTable","onFilterByTitle","onFilterByStatus","onFilterByPriority","openAddTaskDialog","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Component, OnInit} from '@angular/core';\nimport {Task} from './model/Task';\nimport {DataHandlerService} from './service/data-handler.service';\nimport {Category} from './model/Category';\nimport {Priority} from './model/Priority';\nimport {zip} from 'rxjs';\nimport {IntroService} from './service/intro.service';\nimport {concatMap, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'my-plan';\n  tasks: Task[];\n  categories: Category[];\n  priorities: Priority[];\n  categoryMap = new Map<Category, number>();\n\n  selectedCategory: Category = null;\n\n  searchTaskText = '';\n  searchCategoryText = '';\n  statusFilter: boolean;\n  priorityFilter: Priority = null;\n\n\n  totalTasksCountInCategory: number;\n  completedTasksCountInCategory: number;\n  uncompletedTasksCountInCategory: number;\n  uncompletedTotalTasksCount: number;\n\n  showStat = true;\n\n  constructor(\n    private dataHandler: DataHandlerService,\n    private introService: IntroService\n  ) {\n\n  }\n\n  ngOnInit(): void {\n    this.dataHandler.getAllCategories().subscribe(categories => this.categories = categories);\n    this.dataHandler.getAllPriorities().subscribe(priorities => this.priorities = priorities);\n    this.onSelectCategory(null);\n    this.introService.startIntroJS();\n    this.fillCategories();\n  }\n\n  onSelectCategory(category: Category) {\n    this.selectedCategory = category;\n    this.updateTasksAndStat();\n  }\n\n  onUpdateTask(task: Task) {\n    this.dataHandler.updateTask(task).subscribe(() => {\n      this.fillCategories();\n      this.updateTasksAndStat();\n    });\n  }\n\n  onDeleteTask(task: Task) {\n    this.dataHandler.deleteTask(task.id).pipe(\n      concatMap(t => {\n          return this.dataHandler.getUncompletedTasksCountInCategory(t.category).pipe(map(count => {\n            return ({t: task, count});\n          }));\n        }\n      )).subscribe(result => {\n\n\n      const t = result.t as Task;\n\n      if (t.category) {\n        this.categoryMap.set(t.category, result.count);\n      }\n\n      this.updateTasksAndStat();\n\n\n    });\n  }\n\n  onDeleteCategory(category: Category): void {\n    this.dataHandler.deleteCategory(category.id).subscribe(() => {\n      this.selectedCategory = null;\n      this.onSelectCategory(this.selectedCategory);\n      this.categoryMap.delete(category);\n      this.updateTasks();\n    });\n  }\n\n  onUpdateCategory(category: Category): void {\n    this.dataHandler.updateCategory(category).subscribe(() => {\n      this.onSearchCategory(this.searchCategoryText);\n    });\n  }\n\n  onFilterTasksByStatus(status: boolean) {\n    this.statusFilter = status;\n    this.updateTasks();\n  }\n\n  onSearchTasks(searchString: string) {\n    this.searchTaskText = searchString;\n    this.updateTasks();\n  }\n\n  updateTasks() {\n    this.dataHandler.searchTasks(\n      this.selectedCategory,\n      this.searchTaskText,\n      this.statusFilter,\n      this.priorityFilter,\n    ).subscribe(tasks => {\n      this.tasks = tasks;\n    });\n  }\n\n  onFilterTasksByPriority(priority: Priority) {\n    this.priorityFilter = priority;\n    this.updateTasks();\n  }\n\n  onAddTask(task: Task) {\n    this.dataHandler.addTask(task).pipe(\n      concatMap(t => {\n          return this.dataHandler.getUncompletedTasksCountInCategory(t.category).pipe(map(count => {\n            return ({t: task, count});\n          }));\n        }\n      )).subscribe(result => {\n\n      const t = result.t as Task;\n\n      if (t.category) {\n        this.categoryMap.set(t.category, result.count);\n      }\n\n      this.updateTasksAndStat();\n\n    });\n  }\n\n  onAddCategory(title: string) {\n    this.dataHandler.addCategory(title).subscribe(() => this.updateCategories());\n  }\n\n  private updateCategories() {\n    this.dataHandler.getAllCategories().subscribe(categories => this.categories = categories);\n  }\n\n  onSearchCategory(title: string) {\n    this.searchCategoryText = title;\n    this.dataHandler.searchCategories(title).subscribe(categories => {\n      this.categories = categories;\n    });\n  }\n\n  updateTasksAndStat(): void {\n    this.updateTasks();\n    this.updateStat();\n  }\n\n  updateStat(): void {\n    zip(\n      this.dataHandler.getTotalCountInCategory(this.selectedCategory),\n      this.dataHandler.getCompletedTasksCountInCategory(this.selectedCategory),\n      this.dataHandler.getUncompletedTasksCountInCategory(this.selectedCategory),\n      this.dataHandler.getUncompletedTotalCount())\n\n      .subscribe(array => {\n        this.totalTasksCountInCategory = array[0];\n        this.completedTasksCountInCategory = array[1];\n        this.uncompletedTasksCountInCategory = array[2];\n        this.uncompletedTotalTasksCount = array[3];\n      });\n  }\n\n  toggleStat(showStat: boolean) {\n    this.showStat = !showStat;\n  }\n\n  fillCategories() {\n\n    if (this.categoryMap) {\n      this.categoryMap.clear();\n    }\n\n    this.categories = this.categories.sort((a, b) => a.title.localeCompare(b.title));\n\n\n    this.categories.forEach(cat => {\n      this.dataHandler.getUncompletedTasksCountInCategory(cat).subscribe(count => this.categoryMap.set(cat, count));\n    });\n\n  }\n\n}\n","<div class=\"wrapper \"\n>\n  <div class=\"sidebar\"\n       data-color=\"purple\"\n       data-intro=\"Добавление, удаление, редактирование категорий\"\n       data-position='right'\n       data-step=\"1\"\n  >\n    <app-categories (selectCategory)=\"onSelectCategory($event)\"\n                    (deleteCategory)=\"onDeleteCategory($event)\"\n                    (updateCategory)=\"onUpdateCategory($event)\"\n                    (addCategory)=\"onAddCategory($event)\"\n                    (searchCategory)=\"onSearchCategory($event)\"\n\n                    [categories]=\"categories\"\n                    [selectedCategory]=\"selectedCategory\"\n                    [categoryMap]=\"categoryMap\"\n                    [uncompletedTotal]=\"uncompletedTotalTasksCount\"\n    >\n\n    </app-categories>\n  </div>\n  <div class=\"main-panel\">\n    <nav class=\"navbar navbar-expand-lg navbar-transparent navbar-absolute fixed-top \">\n      <app-header\n        [categoryName]=\"selectedCategory ? selectedCategory.title: 'Все'\"\n        [showStat]=\"showStat\"\n        (toggleStat)=\"toggleStat($event)\"\n      >\n      </app-header>\n    </nav>\n    <div class=\"content\">\n      <div class=\"container-fluid\">\n        <div data-intro=\"Статистика по задачам\"\n             data-position='top'\n             data-step=\"3\">\n          <app-stats\n            [totalTasksInCategory]=\"totalTasksCountInCategory\"\n            [completedTasksInCategory]=\"completedTasksCountInCategory\"\n            [uncompletedTasksInCategory]=\"uncompletedTasksCountInCategory\"\n            [showStat]=\"showStat\"\n          >\n          </app-stats>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12\">\n            <div\n              data-intro=\"Список задач с возможностью их редактирования, удаления и добавления, фильтрации и сортировки \"\n              data-position='top'\n              data-step=\"2\">\n              <app-tasks [tasks]=\"tasks\"\n                         [priorities]=\"priorities\"\n                         [selectedCategory]=\"selectedCategory\"\n\n                         (updateTask)=\"onUpdateTask($event)\"\n                         (deleteTask)=\"onDeleteTask($event)\"\n                         (selectCategory)=\"onSelectCategory($event)\"\n                         (addTask)=\"onAddTask($event)\"\n\n                         (filterByStatus)=\"onFilterTasksByStatus($event)\"\n                         (filterByTitle)=\"onSearchTasks($event)\"\n                         (filterByPriority)=\"onFilterTasksByPriority($event)\"\n              ></app-tasks>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {CategoriesComponent} from './views/categories/categories.component';\nimport {TasksComponent} from './views/tasks/tasks.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {EditTaskDialogComponent} from './dialog/edit-task-dialog/edit-task-dialog.component';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {FormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatNativeDateModule, MatOptionModule} from '@angular/material/core';\nimport {MatSelectModule} from '@angular/material/select';\nimport {ConfirmDialogComponent} from './dialog/confirm-dialog/confirm-dialog.component';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { TaskDatePipe } from './pipe/task-date.pipe';\n\nimport {registerLocaleData} from '@angular/common';\nimport localeRu from '@angular/common/locales/ru';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { EditCategoryDialogComponent } from './dialog/edit-category-dialog/edit-category-dialog.component';\nimport { StatsComponent } from './views/stats/stats.component';\nimport { HeaderComponent } from './views/header/header.component';\nimport { StatsCardComponent } from './views/stats/stats-card/stats-card.component';\nimport {ColorPickerModule} from 'ngx-color-picker';\nimport { SettingsDialogComponent } from './dialog/settings-dialog/settings-dialog.component';\nimport { PrioritiesComponent } from './views/priorities/priorities.component';\nimport { EditPriorityDialogComponent } from './dialog/edit-priority-dialog/edit-priority-dialog.component';\n\nregisterLocaleData(localeRu);\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CategoriesComponent,\n    TasksComponent,\n    EditTaskDialogComponent,\n    ConfirmDialogComponent,\n    TaskDatePipe,\n    EditCategoryDialogComponent,\n    StatsComponent,\n    HeaderComponent,\n    StatsCardComponent,\n    SettingsDialogComponent,\n    PrioritiesComponent,\n    EditPriorityDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatTableModule,\n    MatSortModule,\n    MatPaginatorModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    FormsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatCheckboxModule,\n    ColorPickerModule\n  ],\n  providers: [],\n  entryComponents: [\n    EditTaskDialogComponent,\n    ConfirmDialogComponent,\n    EditCategoryDialogComponent,\n    SettingsDialogComponent,\n    EditPriorityDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Category} from '../model/Category';\r\nimport {Priority} from '../model/Priority';\r\nimport {Task} from '../model/Task';\r\n\r\nexport class TestData {\r\n\r\n  static categories: Category[] = [\r\n    {id: 1, title: 'Работа'},\r\n    {id: 2, title: 'Семья'},\r\n    {id: 3, title: 'Учеба'},\r\n    {id: 4, title: 'Отдых'},\r\n    {id: 5, title: 'Спорт'},\r\n    {id: 6, title: 'Еда'},\r\n    {id: 7, title: 'Финанасы'},\r\n    {id: 8, title: 'Гаджеты'},\r\n    {id: 9, title: 'Здоровье'},\r\n    {id: 10, title: 'Автомобиль'}\r\n  ];\r\n  static priorities: Priority[] = [\r\n    {id: 1, title: 'Низкий', color: '#e5e5e5'},\r\n    {id: 2, title: 'Средний', color: '#85D1B2'},\r\n    {id: 3, title: 'Высокий', color: '#f1828d'},\r\n    {id: 4, title: 'Очень срочно', color: '#F1128D'},\r\n  ];\r\n  static tasks: Task[] = [\r\n    {\r\n      id: 1,\r\n      title: 'Закупить продукты',\r\n      priority: TestData.priorities[2],\r\n      completed: false,\r\n      category: TestData.categories[5],\r\n      date: new Date('2020-05-30')\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Передать отчеты руководству',\r\n      priority: TestData.priorities[3],\r\n      completed: true,\r\n      category: TestData.categories[0],\r\n      date: new Date('2020-05-15')\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Убраться в комнате',\r\n      priority: TestData.priorities[1],\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Сходить на прогулку',\r\n      completed: false,\r\n      category: TestData.categories[3]\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Выучить немецкий',\r\n      priority: TestData.priorities[2],\r\n      completed: false,\r\n      category: TestData.categories[2]\r\n    },\r\n    {\r\n      id: 6,\r\n      title: 'Собрать пк',\r\n      priority: TestData.priorities[0],\r\n      completed: false,\r\n      category: TestData.categories[7],\r\n      date: new Date('2020-12-12')\r\n    },\r\n    {\r\n      id: 7,\r\n      title: 'Начать бегать',\r\n      priority: TestData.priorities[1],\r\n      completed: false,\r\n      category: TestData.categories[4],\r\n      date: new Date('2020-08-31')\r\n    },\r\n    {\r\n      id: 8,\r\n      title: 'Поехать на море',\r\n      priority: TestData.priorities[1],\r\n      completed: false,\r\n      category: TestData.categories[3],\r\n      date: new Date('2020-06-30')\r\n    },\r\n    {\r\n      id: 9,\r\n      title: 'Накопить на море',\r\n      priority: TestData.priorities[2],\r\n      completed: true,\r\n      category: TestData.categories[6],\r\n      date: new Date('2020-05-31')\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'Поменять масло',\r\n      completed: false,\r\n      category: TestData.categories[9],\r\n    },\r\n    {\r\n      id: 11,\r\n      title: 'Попросить повышение',\r\n      priority: TestData.priorities[3],\r\n      completed: false,\r\n      category: TestData.categories[0],\r\n    },\r\n    {\r\n      id: 12,\r\n      title: 'Записаться в спорт зал',\r\n      priority: TestData.priorities[3],\r\n      completed: false,\r\n      category: TestData.categories[4],\r\n    },\r\n    {\r\n      id: 13,\r\n      title: 'Поехать на дачу',\r\n      priority: TestData.priorities[2],\r\n      completed: false,\r\n      category: TestData.categories[1],\r\n      date: new Date('2020-05-29')\r\n    },\r\n    {\r\n      id: 14,\r\n      title: 'Научиться готовить борщ',\r\n      completed: true,\r\n      category: TestData.categories[5],\r\n    },\r\n    {\r\n      id: 15,\r\n      title: 'Навестить бабушку',\r\n      priority: TestData.priorities[1],\r\n      completed: true,\r\n      category: TestData.categories[1],\r\n    },\r\n    {\r\n      id: 16,\r\n      title: 'Залить бензин полный бак',\r\n      priority: TestData.priorities[2],\r\n      completed: false,\r\n      category: TestData.categories[9],\r\n    },\r\n    {\r\n      id: 17,\r\n      title: 'Сдать экзамены',\r\n      priority: TestData.priorities[3],\r\n      completed: false,\r\n      category: TestData.categories[2],\r\n      date: new Date('2020-07-10')\r\n    },\r\n    {\r\n      id: 18,\r\n      title: 'Сдать зачеты',\r\n      priority: TestData.priorities[3],\r\n      completed: false,\r\n      category: TestData.categories[2],\r\n      date: new Date('2020-06-15')\r\n    },\r\n    {\r\n      id: 19,\r\n      title: 'Пройти мед осмотр',\r\n      priority: TestData.priorities[1],\r\n      completed: false,\r\n      category: TestData.categories[8],\r\n    }\r\n  ];\r\n}\r\n","import {CategoryDAO} from '../interface/CategoryDAO';\r\nimport {Observable, of} from 'rxjs';\r\nimport {Category} from '../../../model/Category';\r\nimport {TestData} from '../../TestData';\r\n\r\nexport class CategoryDAOArray implements CategoryDAO {\r\n\r\n  getAll(): Observable<Category[]> {\r\n    return of(TestData.categories);\r\n  }\r\n\r\n  add(category: Category): Observable<Category> {\r\n    if (category.id === null || category.id === 0) {\r\n      category.id = this.getLastIdCategory();\r\n    }\r\n    TestData.categories.push(category);\r\n    return of(category);\r\n  }\r\n\r\n  private getLastIdCategory(): number {\r\n    return Math.max.apply(Math, TestData.categories.map(c => c.id)) + 1;\r\n  }\r\n\r\n  delete(id: number): Observable<Category> {\r\n    TestData.tasks.forEach(task => {\r\n      if (task.category && task.category.id === id) {\r\n        task.category = null;\r\n      }\r\n    });\r\n    const categoriesTmp = TestData.categories.find(t => t.id === id);\r\n    TestData.categories.splice(TestData.categories.indexOf(categoriesTmp), 1);\r\n    return of(categoriesTmp);\r\n  }\r\n\r\n  get(id: number): Observable<Category> {\r\n    return undefined;\r\n  }\r\n\r\n\r\n  search(title: string): Observable<Category[]> {\r\n   return of(\r\n     TestData.categories.filter(\r\n       cat => cat.title.toUpperCase().includes(title.toUpperCase())).\r\n       sort((c1, c2) => c1.title.localeCompare(c2.title))\r\n   );\r\n  }\r\n\r\n  update(category: Category): Observable<Category> {\r\n    const categoriesTmp = TestData.categories.find(t => t.id === category.id);\r\n    TestData.categories.splice(TestData.categories.indexOf(categoriesTmp), 1, category);\r\n    return of(categoriesTmp);\r\n  }\r\n\r\n}\r\n","import {PriorityDAO} from '../interface/PriorityDAO';\r\nimport {Priority} from '../../../model/Priority';\r\nimport {Observable, of} from 'rxjs';\r\nimport {TestData} from '../../TestData';\r\n\r\nexport class PriorityDAOArray implements PriorityDAO {\r\n\r\n  add(priority: Priority): Observable<Priority> {\r\n    if (priority.id === null || priority.id === 0) {\r\n      priority.id = this.getLastIdTask();\r\n    }\r\n    TestData.priorities.push(priority);\r\n    return of(priority);\r\n  }\r\n\r\n  private getLastIdTask(): number {\r\n    return Math.max.apply(Math, TestData.priorities.map(priority => priority.id)) + 1;\r\n  }\r\n\r\n  delete(id: number): Observable<Priority> {\r\n    TestData.tasks.forEach(task => {\r\n      if (task.priority && task.priority.id === id) {\r\n        task.priority = null;\r\n      }\r\n    });\r\n    const prioritiesTmp = TestData.priorities.find(t => t.id === id);\r\n    TestData.priorities.splice(TestData.priorities.indexOf(prioritiesTmp), 1);\r\n    return of(prioritiesTmp);\r\n  }\r\n\r\n  get(id: number): Observable<Priority> {\r\n    return undefined;\r\n  }\r\n\r\n\r\n  update(priority: Priority): Observable<Priority> {\r\n    const priorityTmp = TestData.priorities.find(p => p.id === priority.id);\r\n    TestData.priorities.splice(TestData.priorities.indexOf(priorityTmp), 1, priority);\r\n    return of(priority);\r\n  }\r\n\r\n  getAll(): Observable<Priority[]> {\r\n    return of(TestData.priorities);\r\n  }\r\n\r\n}\r\n","import {TaskDAO} from '../interface/TaskDAO';\nimport {Category} from '../../../model/Category';\nimport {Priority} from '../../../model/Priority';\nimport {Observable, of} from 'rxjs';\nimport {Task} from 'src/app/model/Task';\nimport {TestData} from '../../TestData';\n\nexport class TaskDAOArray implements TaskDAO {\n\n  getAll(): Observable<Task[]> {\n    return of(TestData.tasks);\n  }\n\n  get(id: number): Observable<Task> {\n    return of(TestData.tasks.find(todo => todo.id === id));\n  }\n\n  add(task: Task): Observable<Task> {\n    if (task.id === null || task.id === 0) {\n      task.id = this.getLastIdTask();\n    }\n    TestData.tasks.push(task);\n    return of(task);\n  }\n\n  private getLastIdTask(): number {\n    return Math.max.apply(Math, TestData.tasks.map(task => task.id)) + 1;\n  }\n\n  delete(id: number): Observable<Task> {\n    const taskTmp = TestData.tasks.find(t => t.id === id);\n    TestData.tasks.splice(TestData.tasks.indexOf(taskTmp), 1);\n\n    return of(taskTmp);\n  }\n\n  getCompletedCountInCategory(category: Category): Observable<number> {\n    return of(this.searchByElement(category, null, true, null).length);\n  }\n\n  getUncompletedCountInCategory(category: Category): Observable<number> {\n    return of(this.searchByElement(category, null, false, null).length);\n  }\n\n  getTotalCountInCategory(category: Category): Observable<number> {\n    return of(this.searchByElement(category, null, null, null).length);\n  }\n\n  getTotalCount(): Observable<number> {\n    return of(TestData.tasks.length);\n  }\n\n\n  update(task: Task): Observable<Task> {\n    const taskTmp = TestData.tasks.find(t => t.id === task.id);\n    TestData.tasks.splice(TestData.tasks.indexOf(taskTmp), 1, task);\n    return of(task);\n  }\n\n  search(category: Category, searchText: string, status: boolean, priority: Priority): Observable<Task[]> {\n    return of(this.searchByElement(category, searchText, status, priority).reverse());\n  }\n\n  private searchByElement(category: Category, searchText: string, status: boolean, priority: Priority): Task[] {\n    let allTasks = TestData.tasks;\n\n    if (status != null) {\n      allTasks = allTasks.filter(task => task.completed === status);\n    }\n\n    if (category != null) {\n      allTasks = allTasks.filter(task => task.category === category);\n    }\n\n    if (priority != null) {\n      allTasks = allTasks.filter(task => task.priority === priority);\n    }\n\n    if (searchText != null) {\n      allTasks = allTasks.filter(task => task.title.toUpperCase().includes(searchText.toUpperCase()));\n    }\n    return allTasks;\n  }\n\n  getTotalUncompletedCount(): Observable<number> {\n    return of(TestData.tasks.filter(task => !task.completed).length);\n  }\n}\n","export enum OperType {\r\n  ADD ,\r\n  EDIT\r\n}\r\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent implements OnInit {\n\n  dialogTitle: string;\n  message: string;\n\n  constructor(\n    private dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: { dialogTitle: string, message: string },\n  ) {\n    this.dialogTitle = data.dialogTitle;\n    this.message = data.message;\n  }\n\n\n  ngOnInit(): void {\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(true);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n}\n","<h1 mat-dialog-title>\n  {{dialogTitle}}\n</h1>\n\n<div mat-dialog-content>\n  <p>{{message}}</p>\n</div>\n\n<div mat-dialog-actions>\n  <button mat-raised-button color=\"primary\" (click)=\"onConfirm()\">Ok</button>\n  <button mat-button (click)=\"onCancel()\">Отмена</button>\n</div>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../confirm-dialog/confirm-dialog.component';\nimport {OperType} from '../OperType';\n\n@Component({\n  selector: 'app-edit-category-dialog',\n  templateUrl: './edit-category-dialog.component.html',\n  styleUrls: ['./edit-category-dialog.component.css']\n})\nexport class EditCategoryDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<EditCategoryDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: [string, string, OperType],\n              private dialog: MatDialog\n  ) {\n  }\n\n  dialogTitle: string;\n  tmpTitle: string;\n  operType: OperType;\n\n  ngOnInit(): void {\n    this.tmpTitle = this.data[0];\n    this.dialogTitle = this.data[1];\n    this.operType = this.data[2];\n  }\n\n  delete(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: 'Вы действительно хотите удалить задачу?'\n      }, autoFocus: false\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.dialogRef.close('delete');\n      }\n    });\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(this.tmpTitle);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  canDelete(): boolean{\n    return this.operType === OperType.EDIT;\n  }\n}\n","<mat-dialog-content>\n  <p mat-dialog-title>{{dialogTitle}}</p>\n\n  <mat-form-field>\n    <mat-label>Название (15 символов)</mat-label>\n    <input\n      matInput maxlength=\"15\"\n      [(ngModel)]=\"tmpTitle\"\n      (keydown.enter)=\" tmpTitle.trim().length > 0 && onConfirm()\">\n    <button\n      *ngIf=\"tmpTitle.trim().length > 0\"\n      mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n      (click)=\"tmpTitle = ''\" style=\"font-size: 25px\"\n    >\n      <mat-icon>clear</mat-icon>\n    </button>\n\n  </mat-form-field>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <div class=\"col-md-8 col-12\">\n    <button\n      mat-raised-button color=\"primary\"\n      (click)=\"onConfirm()\"\n      [disabled]=\"tmpTitle.trim().length==0\"\n    >\n      Сохранить\n    </button>\n\n    <button mat-raised-button (click)=\"onCancel()\">\n      Отмена\n    </button>\n  </div>\n\n  <div class=\"col-md-4 col-12 text-right\">\n\n    <button mat-button color=\"warn\" (click)=\"delete()\" *ngIf=\"canDelete()\">\n      Удалить\n    </button>\n  </div>\n\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {OperType} from '../OperType';\nimport {ConfirmDialogComponent} from '../confirm-dialog/confirm-dialog.component';\n\n@Component({\n  selector: 'app-edit-priority-dialog',\n  templateUrl: './edit-priority-dialog.component.html',\n  styleUrls: ['./edit-priority-dialog.component.css']\n})\nexport class EditPriorityDialogComponent implements OnInit {\n\n  constructor(private dialogRef: MatDialogRef<EditPriorityDialogComponent>,\n              @Inject(MAT_DIALOG_DATA) private data: [string, string, OperType],\n              private dialog: MatDialog\n  ) {\n  }\n\n  dialogTitle: string;\n  tmpTitle: string;\n  operType: OperType;\n\n  ngOnInit(): void {\n    this.tmpTitle = this.data[0];\n    this.dialogTitle = this.data[1];\n    this.operType = this.data[2];\n  }\n\n  delete(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: 'Вы действительно хотите удалить задачу?'\n      }, autoFocus: false\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.dialogRef.close('delete');\n      }\n    });\n  }\n\n  onConfirm(): void {\n    this.dialogRef.close(this.tmpTitle);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(false);\n  }\n\n  canDelete(): boolean{\n    return this.operType === OperType.EDIT;\n  }\n}\n","<mat-dialog-content>\n  <p mat-dialog-title>{{dialogTitle}}</p>\n\n  <mat-form-field>\n    <mat-label>Название (15 символов)</mat-label>\n    <input\n      matInput maxlength=\"15\"\n      [(ngModel)]=\"tmpTitle\"\n      (keydown.enter)=\" tmpTitle.trim().length > 0 && onConfirm()\">\n    <button\n      *ngIf=\"tmpTitle.trim().length > 0\"\n      mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n      (click)=\"tmpTitle = ''\" style=\"font-size: 25px\"\n    >\n      <mat-icon>clear</mat-icon>\n    </button>\n\n  </mat-form-field>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <div class=\"col-md-8 col-12\">\n    <button\n      mat-raised-button color=\"primary\"\n      (click)=\"onConfirm()\"\n      [disabled]=\"tmpTitle.trim().length==0\"\n    >\n      Сохранить\n    </button>\n\n    <button mat-raised-button (click)=\"onCancel()\">\n      Отмена\n    </button>\n  </div>\n\n  <div class=\"col-md-4 col-12 text-right\">\n\n    <button mat-button color=\"warn\" (click)=\"delete()\" *ngIf=\"canDelete()\">\n      Удалить\n    </button>\n  </div>\n\n</mat-dialog-actions>\n","import {Component, Inject, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {Task} from 'src/app/model/Task';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {Category} from '../../model/Category';\nimport {Priority} from '../../model/Priority';\nimport {ConfirmDialogComponent} from '../confirm-dialog/confirm-dialog.component';\nimport {OperType} from '../OperType';\n\n@Component({\n  selector: 'app-edit-task-dialog',\n  templateUrl: './edit-task-dialog.component.html',\n  styleUrls: ['./edit-task-dialog.component.css']\n})\nexport class EditTaskDialogComponent implements OnInit {\n\n  constructor(\n    private dialogRef: MatDialogRef<EditTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) private data: [Task, string, OperType],\n    private dataHandler: DataHandlerService,\n    private dialog: MatDialog\n  ) {\n  }\n\n  categories: Category[];\n  priorities: Priority[];\n  dialogTitle: string;\n  task: Task;\n  tmpTitle: string;\n  tmpCategory: Category;\n  tmpPriority: Priority;\n  tmpDate: Date;\n  operType: OperType;\n\n  ngOnInit(): void {\n    this.task = this.data[0];\n    this.dialogTitle = this.data[1];\n    this.operType = this.data[2];\n    this.tmpTitle = this.task.title;\n    this.tmpCategory = this.task.category;\n    this.tmpPriority = this.task.priority;\n    this.tmpDate = this.task.date;\n\n    this.dataHandler.getAllCategories().subscribe(items => this.categories = items);\n    this.dataHandler.getAllPriorities().subscribe(items => this.priorities = items);\n  }\n\n  onConfirm(): void {\n    this.task.title = this.tmpTitle;\n    this.task.category = this.tmpCategory;\n    this.task.priority = this.tmpPriority;\n    this.task.date = this.tmpDate;\n\n    this.dialogRef.close(this.task);\n  }\n\n  onCancel(): void {\n    this.dialogRef.close(null);\n  }\n\n  delete(): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: 'Вы действительно хотите удалить задачу?'\n      }, autoFocus: false\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.dialogRef.close('delete');\n      }\n    });\n  }\n\n  complete() {\n    this.dialogRef.close('complete');\n  }\n\n  activate() {\n    this.dialogRef.close('activate');\n  }\n\n  canDelete(): boolean{\n    return this.operType === OperType.EDIT;\n  }\n}\n","<mat-dialog-content>\n  <p mat-dialog-title>{{dialogTitle}}</p>\n\n  <mat-form-field>\n    <mat-label>Название (обязательно)</mat-label>\n      <input\n        matInput\n        [(ngModel)]=\"tmpTitle\"\n        (keydown.enter)=\" tmpTitle.trim().length > 0 && onConfirm()\">\n    <button\n      *ngIf=\"tmpTitle.trim().length > 0\"\n      mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n      (click)=\"tmpTitle = ''\" style=\"font-size: 25px\">\n      <mat-icon>clear</mat-icon>\n    </button>\n\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Укажите категорию</mat-label>\n\n    <mat-select [(ngModel)]=\"tmpCategory\">\n      <mat-option [value]=\"null\">Без категории</mat-option>\n      <mat-option *ngFor=\"let category of categories\" [value]=\"category\">\n        {{category.title}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field>\n    <mat-label>Укажите приоритет</mat-label>\n\n    <mat-select [(ngModel)]=\"tmpPriority\">\n      <mat-option [value]=\"null\">Без приоритета</mat-option>\n      <mat-option *ngFor=\"let priority of priorities\" [value]=\"priority\">\n        {{priority.title}}\n      </mat-option>\n    </mat-select>\n  </mat-form-field>\n\n  <mat-form-field>\n      <input\n        matInput placeholder=\"Укажите срок выполнения\" #inputDate\n        readonly=\"true\"\n        [matDatepicker]=\"picker\"\n        [(ngModel)]=\"tmpDate\"\n        (click)=\"picker.open()\">\n\n    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n    <mat-datepicker #picker></mat-datepicker>\n\n    <button\n    *ngIf=\"inputDate.value.trim().length > 0\"\n    mat-button matSuffix mat-icon-button aria-label=\"Clear\"\n    (click)=\"tmpDate = null\" style=\"font-size: 25px\">\n      <mat-icon>clear</mat-icon>\n    </button>\n  </mat-form-field>\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n  <div class=\"col-md-5 col-12\">\n    <button\n      mat-raised-button color=\"primary\"\n      (click)=\"onConfirm()\"\n      [disabled]=\"tmpTitle.trim().length==0\"\n    >\n      Сохранить\n    </button>\n\n    <button mat-raised-button (click)=\"onCancel()\">\n      Отмена\n    </button>\n  </div>\n\n  <div class=\"col-md-7 col-12 text-right\" *ngIf=\"canDelete()\">\n    <button mat-button *ngIf=\"!task.completed\" (click)=\"complete()\">\n      Завершить задачу\n    </button>\n\n    <button mat-button *ngIf=\"task.completed\" (click)=\"activate()\">\n      Активировать\n    </button>\n\n    <button mat-button color=\"warn\" (click)=\"delete()\">\n      Удалить задачу\n    </button>\n  </div>\n\n</mat-dialog-actions>\n","import {Component, OnInit} from '@angular/core';\nimport {Priority} from '../../model/Priority';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {DataHandlerService} from '../../service/data-handler.service';\n\n@Component({\n  selector: 'app-settings-dialog',\n  templateUrl: './settings-dialog.component.html',\n  styleUrls: ['./settings-dialog.component.css']\n})\nexport class SettingsDialogComponent implements OnInit {\n\n  priorities: Priority[];\n\n  constructor(\n    private  dialogRef: MatDialogRef<SettingsDialogComponent>,\n    private  dataHandler: DataHandlerService\n  ) {\n  }\n\n  ngOnInit() {\n    this.dataHandler.getAllPriorities().subscribe(priorities => this.priorities = priorities);\n  }\n\n  onClose() {\n\n    this.dialogRef.close(false);\n\n  }\n\n  onDeletePriority(priority: Priority) {\n    this.dataHandler.deletePriority(priority.id).subscribe(() => {\n    });\n  }\n\n  onAddPriority(priority: Priority) {\n    this.dataHandler.addPriority(priority).subscribe();\n  }\n\n  onUpdatePriority(priority: Priority) {\n    this.dataHandler.updatePriority(priority).subscribe();\n  }\n}\n","<mat-dialog-content>\n\n  <p class=\"settings-title with-subtitle\" mat-dialog-title>Настройка приоритетов</p>\n\n\n  <app-priorities\n    [priorities]=\"priorities\"\n\n    (deletePriority)=\"onDeletePriority($event)\"\n    (addPriority)=\"onAddPriority($event)\"\n    (updatePriority)=\"onUpdatePriority($event)\"\n  >\n\n  </app-priorities>\n\n\n</mat-dialog-content>\n\n<mat-dialog-actions>\n\n  <button (click)=\"onClose()\" color=\"primary\" mat-raised-button>Закрыть</button>\n\n</mat-dialog-actions>\n\n","export class Category{\r\n  id: number;\r\n  title: string;\r\n\r\n  constructor(id: number, title: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n  }\r\n\r\n}\r\n","export class Priority{\r\n  id: number;\r\n  title: string;\r\n  color: string;\r\n\r\n  constructor(id: number, title: string, color: string) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.color = color;\r\n  }\r\n}\r\n","import {Priority} from './Priority';\r\nimport {Category} from './Category';\r\n\r\nexport class Task {\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n  priority?: Priority;\r\n  category?: Category;\r\n  date?: Date;\r\n\r\n  constructor(id: number, title: string, completed: boolean, priority?: Priority, category?: Category, date?: Date) {\r\n    this.id = id;\r\n    this.title = title;\r\n    this.completed = completed;\r\n    this.priority = priority;\r\n    this.category = category;\r\n    this.date = date;\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\nimport {DatePipe} from '@angular/common';\n\n@Pipe({\n  name: 'taskDate'\n})\nexport class TaskDatePipe extends DatePipe implements PipeTransform {\n\n  transform(date: Date | string, format: string = 'mediumDate'): string {\n    if (date == null) {\n      return 'Без срока';\n    }\n    date = new Date(date);\n\n    const currentDate = new Date().getDate();\n\n    if (date.getDate() === currentDate) {\n      return 'Сегодня';\n    }\n\n    if (date.getDate() === currentDate - 1) {\n      return 'Вчера';\n    }\n\n    if (date.getDate() === currentDate + 1) {\n      return 'Завтра';\n    }\n\n    return  new DatePipe('ru-RU').transform(date, format);\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Category} from '../model/Category';\nimport {Task} from '../model/Task';\nimport {Observable} from 'rxjs';\nimport {TaskDAOArray} from '../data/dao/implementation/TaskDAOArray';\nimport {CategoryDAOArray} from '../data/dao/implementation/CategoryDAOArray';\nimport {Priority} from '../model/Priority';\nimport {PriorityDAOArray} from '../data/dao/implementation/PriorityDAOArray';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataHandlerService {\n\n  // tasksSubject = new BehaviorSubject<Task[]>(TestData.tasks);\n  // categoriesSubject = new BehaviorSubject<Category[]>(TestData.categories);\n  private taskDaoArray = new TaskDAOArray();\n  private categoryDaoArray = new CategoryDAOArray();\n  private priorityDAOArray = new PriorityDAOArray();\n\n  constructor() {\n  }\n\n  /*  fillCategories(): Category[] {\n      return TestData.categories;\n    }*/\n\n  /* fillTasks() {\n     this.tasksSubject.next(TestData.tasks);\n   }\n\n   fillTasksByCategory(category: Category) {\n     const tasks = TestData.tasks.filter(task => task.category === category);\n     this.tasksSubject.next(tasks);\n   }\n */\n  getAllTasks(): Observable<Task[]> {\n    return this.taskDaoArray.getAll();\n  }\n\n  getAllCategories(): Observable<Category[]> {\n    return this.categoryDaoArray.getAll();\n  }\n\n  getAllPriorities(): Observable<Priority[]> {\n    return this.priorityDAOArray.getAll();\n  }\n\n  searchTasks(category: Category, searchText: string, status: boolean, priority: Priority) {\n    return this.taskDaoArray.search(category, searchText, status, priority);\n  }\n\n  updateTask(task: Task): Observable<Task> {\n    return this.taskDaoArray.update(task);\n  }\n\n  deleteTask(id: number): Observable<Task> {\n    return this.taskDaoArray.delete(id);\n  }\n\n  updateCategory(category: Category): Observable<Category> {\n    return this.categoryDaoArray.update(category);\n  }\n\n  deleteCategory(id: number): Observable<Category> {\n    return this.categoryDaoArray.delete(id);\n  }\n\n  addTask(task: Task): Observable<Task> {\n    return this.taskDaoArray.add(task);\n  }\n\n  addCategory(title: string): Observable<Category> {\n    return this.categoryDaoArray.add(new Category(null, title));\n  }\n\n  searchCategories(title: string): Observable<Category[]> {\n    return this.categoryDaoArray.search(title);\n  }\n\n\n  getCompletedTasksCountInCategory(category: Category): Observable<number> {\n    return this.taskDaoArray.getCompletedCountInCategory(category);\n  }\n\n  getUncompletedTotalCount(): Observable<number> {\n    return this.taskDaoArray.getTotalUncompletedCount();\n  }\n\n  getUncompletedTasksCountInCategory(category: Category): Observable<number> {\n    return this.taskDaoArray.getUncompletedCountInCategory(category);\n  }\n\n  getTotalCountInCategory(category: Category): Observable<number> {\n    return this.taskDaoArray.getTotalCountInCategory(category);\n  }\n\n  getTotalCount(): Observable<number> {\n    return this.taskDaoArray.getTotalCount();\n  }\n\n  deletePriority(id: number): Observable<Priority>{\n    return this.priorityDAOArray.delete(id);\n  }\n\n  addPriority(priority: Priority): Observable<Priority> {\n    return this.priorityDAOArray.add(priority);\n  }\n\n  updatePriority(priority: Priority): Observable<Priority> {\n    return this.priorityDAOArray.update(priority);\n  }\n\n}\n\n","import {Injectable} from '@angular/core';\nimport * as introJs from 'intro.js/intro';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IntroService {\n\n  introJS = introJs();\n\n  constructor() {\n  }\n\n  // показать интро (справку) с подсветкой элементов\n  public startIntroJS() {\n\n    this.introJS.setOptions(\n      {\n        nextLabel: 'след. >',\n        prevLabel: '< пред.',\n        doneLabel: 'Выход',\n        skipLabel: 'Выход',\n        exitOnEsc: true,\n        exitOnOverlayClick: false\n      });\n\n    this.introJS.start();\n\n  }\n\n}\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {Category} from '../../model/Category';\nimport {MatDialog} from '@angular/material/dialog';\nimport {EditCategoryDialogComponent} from '../../dialog/edit-category-dialog/edit-category-dialog.component';\nimport {OperType} from '../../dialog/OperType';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  @Input()\n  categories: Category[];\n  @Input()\n  uncompletedTotal: number;\n\n  @Output()\n  selectCategory = new EventEmitter<Category>();\n\n  @Input() selectedCategory: Category;\n\n  @Input('categoryMap')\n  set setCategoryMap(categoryMap: Map<Category, number>) {\n    this.CategoryMap = categoryMap;\n  }\n\n\n  @Output()\n  updateCategory = new EventEmitter<Category>();\n  @Output()\n  deleteCategory = new EventEmitter<Category>();\n  @Output()\n  addCategory = new EventEmitter<string>();\n  @Output()\n  searchCategory = new EventEmitter<string>();\n\n  indexMouseMove: number;\n  searchCategoryTitle: string;\n  CategoryMap: Map<Category, number>;\n\n  constructor(private dataHandler: DataHandlerService,\n              private dialog: MatDialog) {\n    this.selectedCategory = null;\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  showTasksByCategory(category: Category) {\n    if (this.selectedCategory === category) {\n      return;\n    }\n    this.selectedCategory = category;\n\n    this.selectCategory.emit(this.selectedCategory);\n  }\n\n  showEditIcon(index: number): void {\n    this.indexMouseMove = index;\n  }\n\n  openEditCategoryDialog(category: Category): void {\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n      data: [category.title, 'Редактирование категории', OperType.EDIT],\n      width: '425px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'delete') {\n        this.deleteCategory.emit(category);\n        return;\n      }\n\n      if (typeof (result) === 'string') {\n        category.title = result as string;\n\n        this.updateCategory.emit(category);\n        return;\n      }\n    });\n  }\n\n  openAddCategoryDialog(): void {\n    const dialogRef = this.dialog.open(EditCategoryDialogComponent, {\n      data: ['', 'Добавление категории', OperType.ADD],\n      width: '425px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.addCategory.emit(result as string);\n        return;\n      }\n    });\n  }\n\n  search() {\n    if (this.searchCategoryTitle == null) {\n      return;\n    }\n    this.searchCategory.emit(this.searchCategoryTitle);\n  }\n}\n","<div class=\"sidebar\" data-color=\"purple\" data-background-color=\"white\">\n  <div class=\"logo\">\n    <span class=\"nav-title\">Категории</span>\n    <span class=\"add-icon-area\">\n     <button mat-icon-button (click)=\"openAddCategoryDialog()\">\n       <mat-icon>add</mat-icon>\n     </button>\n    </span>\n  </div>\n  <div class=\"sidebar-wrapper \">\n    <ul class=\"nav\" >\n      <mat-form-field class=\"mat-form-center\">\n        <input\n          #inputSearchCategory\n          (keydown.escape)=\"searchCategoryTitle = ''; search()\"\n          (keyup)=\"search()\"\n          [(ngModel)]=\"searchCategoryTitle\"\n\n         autocomplete = off\n          matInput\n          maxlength=\"15\"\n          placeholder=\"Поиск категории\"\n        >\n\n\n        <button (click)=\"searchCategoryTitle = ''; search()\"\n                *ngIf=\"inputSearchCategory.value.trim().length>0\"\n                aria-label=\"Clear\" class=\"clear-icon gray\"\n                style=\"font-size: 25px\"\n                mat-button\n                mat-icon-button\n                matSuffix\n        >\n          <mat-icon>clear</mat-icon>\n        </button>\n      </mat-form-field>\n\n      <li class=\"nav-item category\" (click)=\"showTasksByCategory(null)\"\n          [class.active]=\"selectedCategory === null\">\n        <a class=\"nav-link pointer\" style=\"font-size: 15px\">\n          <span class=\"all-category-title\">Все</span>\n          <span class=\"uncompleted-count\"> {{uncompletedTotal}}</span>\n        </a>\n      </li>\n      <div class=\"line\"></div>\n      <br/>\n      <div *ngIf=\"categories && categories.length == 0\" ><p style=\"font-size: 15px\" class=\"not-found\">Ничего не найдено</p></div>\n\n      <div *ngIf=\"categories && categories.length > 0\">\n      <li class=\"nav-item active\" *ngFor=\"let mapValue of CategoryMap | keyvalue; let index = index\"\n          (click)=\"showTasksByCategory(mapValue.key)\"\n          [class.active]=\"mapValue.key === selectedCategory\"\n          (mouseleave)=\"showEditIcon(null)\"\n          (mouseenter)=\"showEditIcon(index)\"\n          class=\"nav-item pointer\"\n      >\n        <a class=\"nav-link\">\n          <span class=\"category-title\">{{mapValue.key.title}}</span>\n\n          <span class=\"edit-category-icon-area\">\n          <mat-icon\n            *ngIf=\"indexMouseMove === index\"\n            (click)=\"$event.stopPropagation(); openEditCategoryDialog(mapValue.key)\"\n            class=\"edit-category-icon\"\n          >edit\n          </mat-icon>\n          </span>\n          <span class=\"uncompleted-count\"> {{mapValue.value}}</span>\n        </a>\n      </li>\n  </div>\n        </ul>\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {SettingsDialogComponent} from '../../dialog/settings-dialog/settings-dialog.component';\nimport {IntroService} from '../../service/intro.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n\n  @Input()\n  categoryName: string;\n  @Input()\n  showStat: boolean;\n  @Output()\n  toggleStat = new EventEmitter<boolean>();\n\n  constructor(\n    private dialog: MatDialog,\n    private introService: IntroService\n    ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  onToggleStat() {\n    this.toggleStat.emit(this.showStat);\n  }\n\n  showSettings() {\n    const dialogRef = this.dialog.open(SettingsDialogComponent,\n      {\n        autoFocus: false,\n        width: '500px'\n      });\n  }\n\n  showIntroHelp() {\n    this.introService.startIntroJS();\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row  settings\">\n\n\n    <div class=\"col-10 text-left align-self-top\">\n\n      <p class=\"navbar-brand\">{{categoryName}}</p>\n      <p class=\"navbar-brand link\" (click)=\"onToggleStat()\"\n         *ngIf=\"!showStat\">Показать статистику</p>\n      <p class=\"navbar-brand link\" (click)=\"onToggleStat()\"\n         *ngIf=\"showStat\">Скрыть статистику</p>\n    </div>\n    <div class=\"col-2 text-right align-self-top\">\n      <button mat-icon-button\n              data-intro=\"Настройка приориетов\"\n              data-position='top'\n              data-step=\"4\"\n              (click)=\"showSettings()\"\n      >\n        <mat-icon>settings</mat-icon>\n      </button>\n\n      <button class=\"header-icon\"\n              (click)=\"showIntroHelp()\" mat-icon-button>\n        <mat-icon>help</mat-icon>\n      </button>\n\n    </div>\n\n\n  </div>\n</div>\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {Priority} from '../../model/Priority';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../../dialog/confirm-dialog/confirm-dialog.component';\nimport {EditPriorityDialogComponent} from '../../dialog/edit-priority-dialog/edit-priority-dialog.component';\nimport {OperType} from '../../dialog/OperType';\n\n@Component({\n  selector: 'app-priorities',\n  templateUrl: './priorities.component.html',\n  styleUrls: ['./priorities.component.css']\n})\nexport class PrioritiesComponent implements OnInit {\n\n\n  static defaultColor = '#fff';\n\n  @Output()\n  deletePriority = new EventEmitter<Priority>();\n\n  @Output()\n  updatePriority = new EventEmitter<Priority>();\n\n  @Output()\n  addPriority = new EventEmitter<Priority>();\n  @Input()\n  priorities: Priority[];\n\n  constructor(private dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  delete(priority: Priority): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: 'Вы действительно хотите удалить категорию?'\n      }, autoFocus: false\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.deletePriority.emit(priority);\n      }\n    });\n  }\n\n  onEditPriority(priority: Priority) {\n    const dialogRef = this.dialog.open(EditPriorityDialogComponent,\n      {data: [priority.title, 'Редактирование приоритета', OperType.EDIT]});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'delete') {\n        this.deletePriority.emit(priority);\n      }\n\n      if (result) {\n        priority.title = result as string;\n        this.updatePriority.emit(priority);\n        return;\n      }\n    });\n  }\n\n  onAddPriority() {\n    const dialogRef = this.dialog.open(EditPriorityDialogComponent,\n      {data: ['', 'Добавление приоритета', OperType.ADD], width: '425px'});\n\n    dialogRef.afterClosed().subscribe(result => {\n       if (result) {\n        const newPriority = new Priority(null, result as string, PrioritiesComponent.defaultColor);\n        this.addPriority.emit(newPriority);\n      }\n    });\n  }\n}\n\n","<div *ngFor=\"let priority of priorities, let index = index\" class=\"vertical-middle priorities\">\n\n  <div class=\"row align-self-baseline\">\n\n    <div class=\"col-7 \">\n      <a  class=\"pointer\"\n          (click)=\"onEditPriority(priority)\"\n      > {{priority.title}}</a>\n\n    </div>\n\n    <div class=\"col-2 text-right\">\n\n\n      <span [(colorPicker)]=\"priority.color\" [style.background]=\"priority.color\" class=\"color-circle\"></span>\n\n\n    </div>\n\n\n    <div class=\"col-1 text-left\">\n      <p  class=\"pointer gray\"\n          (click)=\"onEditPriority(priority)\"\n      >\n        <mat-icon>edit</mat-icon>\n      </p>\n    </div>\n\n    <div class=\"col-1 text-left\">\n      <p  class=\"pointer gray\" (click)=\"delete(priority)\">\n        <mat-icon>delete</mat-icon>\n      </p>\n    </div>\n\n  </div>\n\n\n</div>\n\n\n<p  class=\"link little\" (click)=\"onAddPriority()\">\n  Добавить приоритет\n</p>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-stats-card',\n  templateUrl: './stats-card.component.html',\n  styleUrls: ['./stats-card.component.css']\n})\nexport class StatsCardComponent implements OnInit {\n\n   @Input()\n  iconName: string;\n\n  @Input()\n  count: any;\n\n  @Input()\n  countTotal: any;\n\n  @Input()\n  title: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"card card-stats\">\n\n  <div class=\"card-header card-header-primary\n   card-header-icon\">\n    <div class=\"card-icon\">\n      <i class=\"material-icons\">{{iconName}}</i>\n    </div>\n    <p class=\"card-category\"></p>\n    <h3 class=\"card-title\">{{count}} <span *ngIf=\"countTotal\">из {{countTotal}}</span>\n    </h3>\n  </div>\n\n  <div class=\"card-footer\">\n    <div class=\"stats\">\n      <p class=\"stat-card-title\">{{title}}</p>\n    </div>\n  </div>\n</div>\n\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-stats',\n  templateUrl: './stats.component.html',\n  styleUrls: ['./stats.component.css']\n})\nexport class StatsComponent implements OnInit {\n\n  @Input()\n  totalTasksInCategory: number;\n\n  @Input()\n  completedTasksInCategory: number;\n\n  @Input()\n  uncompletedTasksInCategory: number;\n\n  @Input()\n  showStat: boolean;\n\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","<div *ngIf=\"showStat\">\r\n  <div class=\"row\">\r\n\r\n\r\n    <app-stats-card\r\n      [count]=\"completedTasksInCategory\"\r\n      [countTotal]=\"totalTasksInCategory\"\r\n      class='col-lg-3 col-md-6 col-sm-6'\r\n      iconName=\"done\"\r\n      title=\"Завершенные задачи\"\r\n    >\r\n    </app-stats-card>\r\n\r\n    <app-stats-card\r\n      [count]=\"uncompletedTasksInCategory\"\r\n      [countTotal]=\"totalTasksInCategory\"\r\n      class='col-lg-3 col-md-6 col-sm-6'\r\n      iconName=\"thumb_down_alt\"\r\n      title=\"Незавершенные задачи\"\r\n    >\r\n    </app-stats-card>\r\n\r\n\r\n    <app-stats-card\r\n      [count]=\"completedTasksInCategory ? (completedTasksInCategory/totalTasksInCategory | percent) : '0 %'\"\r\n      class='col-lg-3 col-md-6 col-sm-6 completed-card'\r\n      iconName=\"poll\"\r\n      title=\"Процент завершенных задач\"\r\n\r\n    >\r\n    </app-stats-card>\r\n\r\n\r\n    <app-stats-card\r\n      [count]=\"uncompletedTasksInCategory ? (uncompletedTasksInCategory/totalTasksInCategory | percent) : '0 %'\"\r\n      class='col-lg-3 col-md-6 col-sm-6'\r\n      iconName=\"thumb_down_alt\"\r\n      title=\"Процент незавершенных задач\">\r\n    </app-stats-card>\r\n\r\n\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output, ViewChild} from '@angular/core';\nimport {Task} from 'src/app/model/Task';\nimport {DataHandlerService} from '../../service/data-handler.service';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {EditTaskDialogComponent} from '../../dialog/edit-task-dialog/edit-task-dialog.component';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ConfirmDialogComponent} from '../../dialog/confirm-dialog/confirm-dialog.component';\nimport {Category} from '../../model/Category';\nimport {Priority} from '../../model/Priority';\nimport {OperType} from '../../dialog/OperType';\n\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit{\n\n  displayedColumns: string[] = ['color', 'id', 'title', 'date', 'priority', 'category', 'operations', 'select'];\n  dataSource: MatTableDataSource<Task>;\n\n\n  @ViewChild(MatPaginator, {static: false}) private paginator: MatPaginator;\n  @ViewChild(MatSort, {static: false}) private sort: MatSort;\n\n  tasks: Task[];\n  priorities: Priority[];\n\n\n  @Input('tasks')\n  private set setTasks(tasks: Task[]) {\n    this.tasks = tasks;\n    this.fillTable();\n  }\n\n  @Input('priorities')\n  private set setPriorities(priorities: Priority[]) {\n    this.priorities = priorities;\n  }\n\n  @Input()\n  selectedCategory: Category;\n\n  @Output()\n  updateTask = new EventEmitter<Task>();\n  @Output()\n  deleteTask = new EventEmitter<Task>();\n  @Output()\n  selectCategory = new EventEmitter<Category>();\n  @Output()\n  filterByTitle = new EventEmitter<string>();\n  @Output()\n  filterByStatus = new EventEmitter<boolean>();\n  @Output()\n  filterByPriority = new EventEmitter<Priority>();\n  @Output()\n  addTask = new EventEmitter<Task>();\n\n  searchTaskText: string;\n  selectedStatusFilter: boolean = null;\n  selectedPriorityFilter: Priority = null;\n\n  constructor(\n    private dataHandler: DataHandlerService,\n    private dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.dataSource = new MatTableDataSource();\n    this.onSelectCategory(null);\n  }\n\n  getPriorityColor(task: Task) {\n    if (task.completed) {\n      return '#F8F9FA';\n    }\n    if (task.priority && task.priority.color) {\n      return task.priority.color;\n    }\n    return '#fff';\n  }\n\n\n  private fillTable() {\n    if (!this.dataSource) {\n      return;\n    }\n\n    this.dataSource.data = this.tasks;\n\n    this.addTableObjects();\n\n    this.dataSource.sortingDataAccessor = (task, colName) => {\n      switch (colName) {\n        case 'priority': {\n          return task.priority ? task.priority.id : null;\n        }\n        case 'category': {\n          return task.category ? task.category.id : null;\n        }\n        case 'date': {\n          return task.date ? task.date : null;\n        }\n        case 'title': {\n          return task.title;\n        }\n\n      }\n    };\n\n  }\n\n  private addTableObjects(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  openEditTaskDialog(task: Task): void {\n    const dialogRef = this.dialog.open(EditTaskDialogComponent, {data: [task, 'Редактирование задачи', OperType.EDIT], autoFocus: false});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result === 'delete') {\n        this.deleteTask.emit(task);\n        return;\n      }\n      if (result === 'complete') {\n        task.completed = true;\n        this.updateTask.emit(task);\n        return;\n      }\n      if (result === 'activate') {\n        task.completed = false;\n        this.updateTask.emit(task);\n        return;\n      }\n\n\n      if (result as Task) {\n        this.updateTask.emit(task);\n        return;\n      }\n    });\n\n  }\n\n  openDeleteDialog(task: Task): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      maxWidth: '500px',\n      data: {\n        dialogTitle: 'Подтвердите действие',\n        message: 'Вы действительно хотите удалить задачу?'\n      }, autoFocus: false\n    });\n\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.deleteTask.emit(task);\n      }\n    });\n  }\n\n  onToggleStatus(task: Task): void {\n    task.completed = !task.completed;\n    this.updateTask.emit(task);\n  }\n\n  onSelectCategory(category: Category) {\n    this.selectCategory.emit(category);\n  }\n\n  onFilterByTitle() {\n    this.filterByTitle.emit(this.searchTaskText);\n  }\n\n  onFilterByStatus(value: boolean) {\n    if (value !== this.selectedStatusFilter) {\n      this.selectedStatusFilter = value;\n      this.filterByStatus.emit(this.selectedStatusFilter);\n    }\n  }\n\n  onFilterByPriority(value: Priority) {\n    if (value !== this.selectedPriorityFilter) {\n      this.selectedPriorityFilter = value;\n      this.filterByPriority.emit(this.selectedPriorityFilter);\n    }\n  }\n\n  openAddTaskDialog() {\n    const task = new Task(null, '', false, null, this.selectedCategory);\n\n    const dialogRef = this.dialog.open(EditTaskDialogComponent, {data: [task, 'Добавление задачи', OperType.ADD]});\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.addTask.emit(task);\n      }\n    });\n\n  }\n}\n","<div class=\"row\">\n\n  <div class=\"col-md-3 col-sm-12\">\n\n    <mat-form-field>\n      <input\n        #filterInput\n        (keydown.escape)=\"searchTaskText = ''; onFilterByTitle()\"\n        (keyup)=\"onFilterByTitle()\"\n        [(ngModel)]=\"searchTaskText\"\n        autocomplete = off\n        matInput\n        placeholder=\"Поиск в текущей категории\"\n      >\n\n\n      <button (click)=\"searchTaskText = ''; onFilterByTitle()\"\n              *ngIf=\"filterInput.value.trim().length>0\"\n              aria-label=\"Clear\" class=\"clear-icon gray\"\n              style=\"font-size: 25px\"\n              mat-button\n              mat-icon-button\n              matSuffix\n      >\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-form-field>\n\n  </div>\n\n  <div class=\"col-md-3 col-sm-12\">\n\n    <mat-form-field>\n      <mat-select #statusFilter (valueChange)=\"onFilterByStatus(this.$event)\"\n                  [value]=\"selectedStatusFilter\" placeholder=\"Фильтр по статусу\">\n        <mat-option [value]=\"null\">Все статусы</mat-option>\n        <mat-option [value]=\"true\">Завершенные задачи</mat-option>\n        <mat-option [value]=\"false\">Незавершенные задачи</mat-option>\n      </mat-select>\n\n      <button (click)=\"$event.stopPropagation(); onFilterByStatus(null)\"\n              *ngIf=\"selectedStatusFilter != null\"\n              aria-label=\"Clear\" class=\"clear-icon gray\"\n              style=\"font-size: 25px\"\n              mat-button\n              mat-icon-button\n              matSuffix\n      >\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-form-field>\n\n  </div>\n\n  <div class=\"col-md-3 col-sm-12\">\n    <mat-form-field>\n      <mat-select [value]=\"selectedPriorityFilter\"\n                  (valueChange)=\"onFilterByPriority(this.$event)\"\n                  placeholder=\"Фильтр по риоритетам\">\n        <mat-option [value]=\"null\">Все приоритеты</mat-option>\n        <mat-option *ngFor=\"let priority of priorities\" [value]=\"priority\">{{priority.title}}</mat-option>\n      </mat-select>\n\n      <button (click)=\"$event.stopPropagation(); onFilterByPriority(null)\"\n              *ngIf=\"selectedPriorityFilter != null\"\n              aria-label=\"Clear\" class=\"clear-icon gray\"\n              style=\"font-size: 25px\"\n              mat-button\n              mat-icon-button\n              matSuffix\n      >\n        <mat-icon>clear</mat-icon>\n      </button>\n    </mat-form-field>\n  </div>\n\n  <div class=\"col-md-3 col-sm-12 text-right\">\n    <div class=\"row\">\n      <div class=\"text-left col-6\">\n      <button\n        *ngIf=\" selectedPriorityFilter!=null || selectedStatusFilter!= null || (searchTaskText != null && searchTaskText.trim()!='')\"\n        matSuffix\n        mat-button\n        aria-label=\"Clear\"\n        (click)=\"$event.stopPropagation();onFilterByStatus(null);\n        onFilterByPriority(null); searchTaskText=''; onFilterByTitle()\"\n      >Сбросить фильтр\n      </button>\n      </div>\n      <div>\n        <button mat-raised-button color=\"primary\"\n        (click)=\"openAddTaskDialog()\" >Добавить</button>\n      </div>\n    </div>\n\n  </div>\n\n  <div class=\"col-md-12 task-list\">\n    <div class=\"card \">\n      <div class=\"card-header card-header-primary\">\n        <h4 class=\"card-title\">Список задач</h4>\n      </div>\n      <div class=\"card-body table-responsive\" *ngIf=\"tasks && tasks.length > 0\">\n        <table [dataSource]=\"dataSource\" mat-table matSort>\n\n          <ng-container matColumnDef=\"color\">\n            <th *matHeaderCellDef mat-header-cell></th>\n            <td class=\"col-color\" *matCellDef=\"let task\"\n                [style.background-color]=\"getPriorityColor(task)\"\n                mat-cell></td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"id\">\n            <th *matHeaderCellDef mat-header-cell></th>\n            <td class=\"col-id\" *matCellDef=\"let index = index;\" mat-cell>\n              {{index + 1}}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"title\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header>Название</th>\n            <td class=\"col-title pointer\" *matCellDef=\"let task\"\n                [class.completed]=\"task.completed\"\n                mat-cell\n                (click)=\"openEditTaskDialog(task)\">\n              {{task.title}}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"date\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header>Срок</th>\n            <td class=\"col-date\" *matCellDef=\"let task\"\n                [ngClass]=\"{'completed': task.completed, 'novalue': !task.date}\"\n                mat-cell>\n              {{task.date | taskDate }}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"priority\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header>Приоритет</th>\n            <td class=\"col-priority\" *matCellDef=\"let task\"\n                [ngClass]=\"{'completed': task.completed, 'novalue': !task.priority}\"\n                mat-cell>\n              {{task.priority ? task.priority.title : 'Без приоритета'}}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"category\">\n            <th *matHeaderCellDef mat-header-cell mat-sort-header>Категория</th>\n            <td class=\"col-category\" *matCellDef=\"let task\"\n                [ngClass]=\"{'completed': task.completed, 'novalue': !task.category,\n                'link': !task.completed && task.category}\"\n                mat-cell\n                (click)=\" !task.completed && task.category && onSelectCategory(task.category)\">\n              {{task.category ? task.category.title : 'Без категории'}}\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"operations\">\n            <th *matHeaderCellDef mat-header-cell></th>\n            <td class=\"col-operations\" mat-cell *matCellDef=\"let task\"\n                [class.completed]=\"task.completed\">\n              <button mat-icon-button (click)=\"openDeleteDialog(task)\"\n                      class=\"delete-icon\"\n              >\n                <mat-icon aria-hidden=\"false\">delete</mat-icon>\n              </button>\n              <button mat-icon-button (click)=\"openEditTaskDialog(task)\"\n                      class=\"edit-icon\"\n              >\n                <mat-icon aria-hidden=\"false\">edit</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n\n          <ng-container matColumnDef=\"select\">\n            <th *matHeaderCellDef mat-header-cell></th>\n            <td class=\"col-select text-right\" mat-cell *matCellDef=\"let task\">\n              <mat-checkbox color=\"primary\"\n                            (click)=\"$event.stopPropagation()\"\n                            (change)=\"$event ? onToggleStatus(task): null\"\n                            [checked]=\"task.completed\"\n              >\n              </mat-checkbox>\n            </td>\n          </ng-container>\n\n\n          <tr *matHeaderRowDef=\"displayedColumns;\" mat-header-row></tr>\n\n          <tr *matRowDef=\"let row; columns: displayedColumns;\" mat-row></tr>\n\n\n          <\n\n        </table>\n\n        <mat-paginator [pageSize]=\"10\" [pageSizeOptions]=\"[5, 10, 20, 50]\" showFirstLastButtons></mat-paginator>\n\n      </div>\n\n      <div *ngIf=\"tasks && tasks.length == 0\"><p class=\"not-found\">Ничего не найдено</p></div>\n\n    </div>\n\n  </div>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}